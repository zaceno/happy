{"version":3,"sources":["../node_modules/hyperapp/src/index.js","util/logger.js","util/html.js","components/body.js","fx/immediate.js","components/message.js","fx/after-render.js","components/icon.js","components/chevron.js","components/navigation-button.js","components/navigation-page.js","components/navigation-container.js","navigation.js","components/happiness-selector.js","happiness.js","components/happiness-result.js","votes.js","pages/reset.js","pages/result.js","pages/pass.js","pages/vote.js","pages/start.js","pages/init.js","index.js"],"names":["RECYCLED_NODE","LAZY_NODE","TEXT_NODE","EMPTY_OBJ","EMPTY_ARR","map","isArray","Array","defer","requestAnimationFrame","setTimeout","createClass","obj","out","length","tmp","k","merge","a","b","batch","list","reduce","item","concat","isSameAction","shouldRestart","patchSubs","oldSubs","newSubs","dispatch","oldSub","newSub","i","subs","push","patchProperty","node","key","oldValue","newValue","listener","isSvg","setProperty","actions","slice","addEventListener","passive","removeEventListener","removeAttribute","setAttribute","createNode","vnode","type","document","createTextNode","name","createElementNS","createElement","props","len","children","appendChild","getVNode","getKey","patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldVProps","newVProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","propsChanged","lazy","view","createVNode","createTextVNode","value","recycleNode","nodeType","nodeName","toLowerCase","call","childNodes","Lazy","h","rest","arguments","pop","app","enhance","state","lock","vdom","subscriptions","event","action","preventDefault","stopPropagation","setState","newState","render","fx","parentNode","init","args","payload","ret","console","log","Proxy","get","cache","body","html","f","d","div","class","_","svg","_svg","path","circle","line","width","height","fSvg","viewBox","fCircle","fLine","fPath","tags","tag","fill","icons","chevron","noFace","cx","cy","r","veryHappyFace","x1","y1","x2","y2","happyFace","uncertainFace","unhappyFace","veryUnhappyFace","effect","direction","onnavigate","active","text","extra","button","navButton","onmousedown","ontouchstart","p","section","navPage","exit","exiting","enter","entering","run","running","left","right","ontransitionend","page","prev","main","RunTransition","nav","mode","EndTransition","Navigate","Init","Button","Page","contentView","isPrev","Container","ul","li","options","icon","label","set","opt","selected","Select","x","happiness","Value","View","num","tot","Math","round","Vote","vote","votes","Nav","Votes","StartPage","ResetPage","ResultPage","VotePage","CommitAndReset","Happiness","PassPage","InitPage","logger"],"mappings":"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","file":"src.dc6a76fd.map","sourceRoot":"../src","sourcesContent":["var RECYCLED_NODE = 1\nvar LAZY_NODE = 2\nvar TEXT_NODE = 3\nvar EMPTY_OBJ = {}\nvar EMPTY_ARR = []\n\nvar map = EMPTY_ARR.map\nvar isArray = Array.isArray\nvar defer = requestAnimationFrame || setTimeout\n\nvar createClass = function(obj) {\n  var out = \"\"\n\n  if (typeof obj === \"string\") return obj\n\n  if (isArray(obj) && obj.length > 0) {\n    for (var k = 0, tmp; k < obj.length; k++) {\n      if ((tmp = createClass(obj[k])) !== \"\") {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (var k in obj) {\n      if (obj[k]) {\n        out += (out && \" \") + k\n      }\n    }\n  }\n\n  return out\n}\n\nvar merge = function(a, b) {\n  var out = {}\n\n  for (var k in a) out[k] = a[k]\n  for (var k in b) out[k] = b[k]\n\n  return out\n}\n\nvar batch = function(list) {\n  return list.reduce(function(out, item) {\n    return out.concat(\n      !item || item === true\n        ? false\n        : typeof item[0] === \"function\"\n        ? [item]\n        : batch(item)\n    )\n  }, EMPTY_ARR)\n}\n\nvar isSameAction = function(a, b) {\n  return isArray(a) && isArray(b) && a[0] === b[0] && typeof a[0] === \"function\"\n}\n\nvar shouldRestart = function(a, b) {\n  for (var k in merge(a, b)) {\n    if (a[k] !== b[k] && !isSameAction(a[k], b[k])) return true\n    b[k] = a[k]\n  }\n}\n\nvar patchSubs = function(oldSubs, newSubs, dispatch) {\n  for (\n    var i = 0, oldSub, newSub, subs = [];\n    i < oldSubs.length || i < newSubs.length;\n    i++\n  ) {\n    oldSub = oldSubs[i]\n    newSub = newSubs[i]\n    subs.push(\n      newSub\n        ? !oldSub ||\n          newSub[0] !== oldSub[0] ||\n          shouldRestart(newSub[1], oldSub[1])\n          ? [\n              newSub[0],\n              newSub[1],\n              newSub[0](newSub[1], dispatch),\n              oldSub && oldSub[2]()\n            ]\n          : oldSub\n        : oldSub && oldSub[2]()\n    )\n  }\n  return subs\n}\n\nvar patchProperty = function(node, key, oldValue, newValue, listener, isSvg) {\n  if (key === \"key\") {\n  } else if (key === \"style\") {\n    for (var k in merge(oldValue, newValue)) {\n      oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k]\n      if (k[0] === \"-\") {\n        node[key].setProperty(k, oldValue)\n      } else {\n        node[key][k] = oldValue\n      }\n    }\n  } else if (key[0] === \"o\" && key[1] === \"n\") {\n    if (\n      !((node.actions || (node.actions = {}))[(key = key.slice(2))] = newValue)\n    ) {\n      node.removeEventListener(key, listener)\n    } else if (!oldValue) {\n      node.addEventListener(key, listener, newValue.passive ? newValue : false)\n    }\n  } else if (!isSvg && key !== \"list\" && key in node) {\n    node[key] = newValue == null ? \"\" : newValue\n  } else if (\n    newValue == null ||\n    newValue === false ||\n    (key === \"class\" && !(newValue = createClass(newValue)))\n  ) {\n    node.removeAttribute(key)\n  } else {\n    node.setAttribute(key, newValue)\n  }\n}\n\nvar createNode = function(vnode, listener, isSvg) {\n  var node =\n    vnode.type === TEXT_NODE\n      ? document.createTextNode(vnode.name)\n      : (isSvg = isSvg || vnode.name === \"svg\")\n      ? document.createElementNS(\"http://www.w3.org/2000/svg\", vnode.name)\n      : document.createElement(vnode.name)\n  var props = vnode.props\n\n  for (var k in props) {\n    patchProperty(node, k, null, props[k], listener, isSvg)\n  }\n\n  for (var i = 0, len = vnode.children.length; i < len; i++) {\n    node.appendChild(\n      createNode(\n        (vnode.children[i] = getVNode(vnode.children[i])),\n        listener,\n        isSvg\n      )\n    )\n  }\n\n  return (vnode.node = node)\n}\n\nvar getKey = function(vnode) {\n  return vnode == null ? null : vnode.key\n}\n\nvar patch = function(parent, node, oldVNode, newVNode, listener, isSvg) {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.type === TEXT_NODE &&\n    newVNode.type === TEXT_NODE\n  ) {\n    if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name\n  } else if (oldVNode == null || oldVNode.name !== newVNode.name) {\n    node = parent.insertBefore(\n      createNode((newVNode = getVNode(newVNode)), listener, isSvg),\n      node\n    )\n    if (oldVNode != null) parent.removeChild(oldVNode.node)\n  } else {\n    var tmpVKid\n    var oldVKid\n\n    var oldKey\n    var newKey\n\n    var oldVProps = oldVNode.props\n    var newVProps = newVNode.props\n\n    var oldVKids = oldVNode.children\n    var newVKids = newVNode.children\n\n    var oldHead = 0\n    var newHead = 0\n    var oldTail = oldVKids.length - 1\n    var newTail = newVKids.length - 1\n\n    isSvg = isSvg || newVNode.name === \"svg\"\n\n    for (var i in merge(oldVProps, newVProps)) {\n      if (\n        (i === \"value\" || i === \"selected\" || i === \"checked\"\n          ? node[i]\n          : oldVProps[i]) !== newVProps[i]\n      ) {\n        patchProperty(node, i, oldVProps[i], newVProps[i], listener, isSvg)\n      }\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead],\n        (newVKids[newHead] = getVNode(\n          newVKids[newHead++],\n          oldVKids[oldHead++]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail],\n        (newVKids[newTail] = getVNode(\n          newVKids[newTail--],\n          oldVKids[oldTail--]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(\n            (newVKids[newHead] = getVNode(newVKids[newHead++])),\n            listener,\n            isSvg\n          ),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        node.removeChild(oldVKids[oldHead++].node)\n      }\n    } else {\n      for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(\n          (newVKids[newHead] = getVNode(newVKids[newHead], oldVKid))\n        )\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            node.removeChild(oldVKid.node)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.type === RECYCLED_NODE) {\n          if (oldKey == null) {\n            patch(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patch(\n              node,\n              oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patch(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n              newKeyed[newKey] = true\n            } else {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n          node.removeChild(oldVKid.node)\n        }\n      }\n\n      for (var i in keyed) {\n        if (newKeyed[i] == null) {\n          node.removeChild(keyed[i].node)\n        }\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nvar propsChanged = function(a, b) {\n  for (var k in a) if (a[k] !== b[k]) return true\n  for (var k in b) if (a[k] !== b[k]) return true\n}\n\nvar getVNode = function(newVNode, oldVNode) {\n  return newVNode.type === LAZY_NODE\n    ? ((!oldVNode || propsChanged(oldVNode.lazy, newVNode.lazy)) &&\n        ((oldVNode = newVNode.lazy.view(newVNode.lazy)).lazy = newVNode.lazy),\n      oldVNode)\n    : newVNode\n}\n\nvar createVNode = function(name, props, children, node, key, type) {\n  return {\n    name: name,\n    props: props,\n    children: children,\n    node: node,\n    type: type,\n    key: key\n  }\n}\n\nvar createTextVNode = function(value, node) {\n  return createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, null, TEXT_NODE)\n}\n\nvar recycleNode = function(node) {\n  return node.nodeType === TEXT_NODE\n    ? createTextVNode(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJ,\n        map.call(node.childNodes, recycleNode),\n        node,\n        null,\n        RECYCLED_NODE\n      )\n}\n\nexport var Lazy = function(props) {\n  return {\n    lazy: props,\n    type: LAZY_NODE\n  }\n}\n\nexport var h = function(name, props) {\n  for (var vnode, rest = [], children = [], i = arguments.length; i-- > 2; ) {\n    rest.push(arguments[i])\n  }\n\n  while (rest.length > 0) {\n    if (isArray((vnode = rest.pop()))) {\n      for (var i = vnode.length; i-- > 0; ) {\n        rest.push(vnode[i])\n      }\n    } else if (vnode === false || vnode === true || vnode == null) {\n    } else {\n      children.push(typeof vnode === \"object\" ? vnode : createTextVNode(vnode))\n    }\n  }\n\n  props = props || EMPTY_OBJ\n\n  return typeof name === \"function\"\n    ? name(props, children)\n    : createVNode(name, props, children, null, props.key)\n}\n\nexport var app = function(props, enhance) {\n  var state = {}\n  var lock = false\n  var view = props.view\n  var node = props.node\n  var vdom = node && recycleNode(node)\n  var subscriptions = props.subscriptions\n  var subs = []\n\n  var listener = function(event) {\n    var action = this.actions[event.type]\n    if (action.preventDefault) event.preventDefault()\n    if (action.stopPropagation) event.stopPropagation()\n    dispatch(action.action || action, event)\n  }\n\n  var setState = function(newState) {\n    return (\n      state === newState || lock || defer(render, (lock = true)),\n      (state = newState)\n    )\n  }\n\n  var dispatch = (enhance ||\n    function(a) {\n      return a\n    })(function(action, props) {\n    return typeof action === \"function\"\n      ? dispatch(action(state, props))\n      : isArray(action)\n      ? typeof action[0] === \"function\"\n        ? dispatch(\n            action[0],\n            typeof action[1] === \"function\" ? action[1](props) : action[1]\n          )\n        : (batch(action.slice(1)).map(function(fx) {\n            fx && fx[0](fx[1], dispatch)\n          }, setState(action[0])),\n          state)\n      : setState(action)\n  })\n\n  var render = function() {\n    lock = false\n    if (subscriptions) {\n      subs = patchSubs(subs, batch(subscriptions(state)), dispatch)\n    }\n    if (view) {\n      node = patch(\n        node.parentNode,\n        node,\n        vdom,\n        typeof (vdom = view(state)) === \"string\" ? createTextVNode(vdom) : vdom,\n        listener\n      )\n    }\n  }\n\n  dispatch(props.init)\n}\n","let lock = false\nexport default dispatch => (...args) => {\n    if (typeof args[0] !== 'function') return dispatch(...args)\n    const name = args[0].name || '-'\n    const payload = args[1]\n    const ret = dispatch(...args)\n    console.log(name, payload, ret)\n    return ret\n}\n","import { h } from 'hyperapp'\nexport default new Proxy(\n    {},\n    {\n        get(cache, name) {\n            if (!cache[name]) {\n                cache[name] = (...args) => {\n                    if (\n                        args[0] &&\n                        typeof args[0] === 'object' &&\n                        !Array.isArray(args[0])\n                    )\n                        return h(name, ...args)\n                    return h(name, {}, ...args)\n                }\n            }\n            return cache[name]\n        },\n    }\n)\n","import html from '../util/html'\nexport default html.body\n","export default (f => (...a) => [f, a])((a, d) => d(...a))\n","import html from '../util/html'\nexport default children => html.div({ class: 'message' }, children)\n","export default (f => a => [f, a])((a, d) => requestAnimationFrame(_ => d(a)))\n","import html from '../util/html'\nconst { div, svg: _svg, path, circle, line } = html\n\nconst svg = (props, children) =>\n    _svg(\n        {\n            ...props,\n            width: '100%',\n            height: '100%',\n        },\n        children\n    )\n\nconst fSvg = children =>\n    svg({ width: '100%', height: '100%', viewBox: '-50 -50 100 100' }, children)\n\nconst [fCircle, fLine, fPath] = (tags =>\n    tags.map(tag => props => {\n        props.fill = 'transparent'\n        props['stroke-width'] = 5\n        props['stroke-linecap'] = 'round'\n        return tag(props)\n    }))([circle, line, path])\n\nconst icons = {\n    chevron: svg({ viewBox: '-10 -20 20 40' }, [\n        path({\n            d: 'M -7 -17 L 7 0 L -7 17',\n            'stroke-linecap': 'butt',\n            'stroke-width': '3',\n        }),\n    ]),\n\n    noFace: fSvg([fCircle({ cx: 0, cy: 0, r: 40 })]),\n\n    veryHappyFace: fSvg([\n        fCircle({ cx: 0, cy: 0, r: 40 }),\n        fLine({ x1: -18, y1: -10, x2: -8, y2: -18 }),\n        fLine({ x1: 18, y1: -10, x2: 8, y2: -18 }),\n        fPath({ d: 'M -15 15 C 0 20 0 20 15 15' }),\n    ]),\n\n    happyFace: fSvg([\n        fCircle({ cx: 0, cy: 0, r: 40 }),\n        fCircle({ cx: -15, cy: -8, r: 2 }),\n        fCircle({ cx: 15, cy: -8, r: 2 }),\n        fPath({ d: 'M -15 15 C 0 20 0 20 15 15' }),\n    ]),\n\n    uncertainFace: fSvg([\n        fCircle({ cx: 0, cy: 0, r: 40 }),\n        fCircle({ cx: -15, cy: -8, r: 2 }),\n        fCircle({ cx: 15, cy: -8, r: 2 }),\n        fLine({ x1: -8, y1: 15, x2: 8, y2: 15 }),\n    ]),\n\n    unhappyFace: fSvg([\n        fCircle({ cx: 0, cy: 0, r: 40 }),\n        fCircle({ cx: -15, cy: -8, r: 2 }),\n        fCircle({ cx: 15, cy: -8, r: 2 }),\n        fPath({ d: 'M -15 15 C 0 10 0 10 15 15' }),\n    ]),\n\n    veryUnhappyFace: fSvg([\n        fCircle({ cx: 0, cy: 0, r: 40 }),\n        fLine({ x1: -15, y1: -7, x2: -8, y2: -15 }),\n        fLine({ x1: -8, y1: -15, x2: -15, y2: -18 }),\n        fLine({ x1: 15, y1: -7, x2: 8, y2: -15 }),\n        fLine({ x1: 8, y1: -15, x2: 15, y2: -18 }),\n        fPath({ d: 'M -18 20 C -15 5 15 5 18 20' }),\n    ]),\n}\n\nexport default ({ name, effect }) =>\n    div({ class: `icon ${effect}` }, [icons[name]])\n","import Icon from './icon'\nexport default ({ direction }) =>\n    Icon({\n        name: 'chevron',\n        effect: direction === 'right' ? 'hflip' : '',\n    })\n","import html from '../util/html'\nimport Chevron from './chevron'\nexport default ({ direction, onnavigate, active, text, extra }, children) =>\n    html.button(\n        {\n            class: { navButton: true, active, [direction]: true },\n            onmousedown: onnavigate,\n            ontouchstart: onnavigate,\n        },\n        [\n            Chevron({ direction }),\n            html.p({ class: 'extraText' }, extra),\n            html.p({ class: 'mainText' }, text),\n        ]\n    )\n","import html from '../util/html'\n\nexport default (props, children) =>\n    html.section(\n        {\n            class: {\n                navPage: true,\n                exit: props.exiting,\n                enter: props.entering,\n                run: props.running,\n                left: props.direction === 'left',\n                right: props.direction === 'right',\n            },\n            ontransitionend: props.ontransitionend,\n        },\n        children\n    )\n","import html from '../util/html'\n\nexport default ({ page, prev }) =>\n    html.main({ class: 'navContainer' }, [prev && prev, page])\n","import AfterRender from './fx/after-render'\nimport Immediate from './fx/immediate'\nimport NavButton from './components/navigation-button'\nimport NavPage from './components/navigation-page'\nimport NavContainer from './components/navigation-container'\n\nconst RunTransition = state => ({\n    ...state,\n    nav: { ...state.nav, mode: 'run' },\n})\n\nconst EndTransition = state => ({\n    ...state,\n    nav: { ...state.nav, mode: 'idle' },\n})\n\nconst Navigate = (state, props) => {\n    if (state.nav.mode !== 'idle') return state\n    return [\n        {\n            ...state,\n            nav: {\n                mode: 'start',\n                page: props.page,\n                prev: state.nav.page,\n                direction: props.direction,\n            },\n        },\n        AfterRender(RunTransition),\n        props.onnavigate && Immediate(props.onnavigate),\n    ]\n}\n\nexport const Init = (state, page) => ({\n    ...state,\n    nav: { mode: 'idle', page },\n})\n\nexport const Button = (state, { page, direction, onnavigate, text, extra }) =>\n    NavButton({\n        active: state.nav.mode !== 'idle' && state.nav.page === page,\n        text,\n        extra,\n        direction,\n        onnavigate: [\n            Navigate,\n            {\n                page,\n                direction,\n                onnavigate,\n            },\n        ],\n    })\n\nexport const Page = contentView => (state, isPrev) =>\n    NavPage(\n        {\n            entering: state.nav.mode !== 'idle' && !isPrev,\n            exiting: state.nav.mode !== 'idle' && isPrev,\n            running: state.nav.mode === 'run',\n            direction: state.nav.direction,\n            ontransitionend: EndTransition,\n        },\n        contentView(state)\n    )\n\nexport const Container = state => {\n    const { page, prev } = state.nav\n    return state.nav.mode === 'idle'\n        ? NavContainer({ page: state.nav.page(state) })\n        : NavContainer({\n              prev: state.nav.prev(state, true),\n              page: state.nav.page(state),\n          })\n}\n","import Icon from './icon'\nimport html from '../util/html'\nconst { ul, li, p } = html\n\nconst options = [\n    {\n        value: 0,\n        icon: 'noFace',\n        label: 'No Vote',\n        extra: \"I don't want to participate.\",\n    },\n    {\n        value: 5,\n        icon: 'veryHappyFace',\n        label: 'Very Happy',\n        extra: 'It should always be this way!',\n    },\n    {\n        value: 4,\n        icon: 'happyFace',\n        label: 'Happy',\n        extra: 'It can always get better!',\n    },\n    {\n        value: 3,\n        icon: 'uncertainFace',\n        label: \"Don't know\",\n        extra: 'Meh... / Mixed feelings',\n    },\n    {\n        value: 2,\n        icon: 'unhappyFace',\n        label: 'Unhappy',\n        extra: 'A lot needs to change!',\n    },\n    {\n        value: 1,\n        icon: 'veryUnhappyFace',\n        label: 'Very Unhappy',\n        extra: 'Why even bother...',\n    },\n]\n\nexport default ({ value, set }) =>\n    ul(\n        { class: 'happinessSelector' },\n        options.map(opt =>\n            li(\n                {\n                    ontouchstart: [set, opt.value],\n                    onmousedown: [set, opt.value],\n                    class: { selected: value === opt.value },\n                },\n                [\n                    Icon({ name: opt.icon }),\n                    p({ class: 'mainText' }, opt.label),\n                    p({ class: 'extraText' }, opt.extra),\n                ]\n            )\n        )\n    )\n","import Selector from './components/happiness-selector'\n\nconst Select = (state, x) => ({\n    ...state,\n    happiness: x,\n})\nconst Init = (state, x) => ({\n    ...state,\n    happiness: 0,\n})\nconst Value = state => state.happiness\nconst View = state => Selector({ value: state.happiness, set: Select })\n\nexport { Init, View, Value }\n","import html from '../util/html'\n\nexport default ({ num, tot }) =>\n    html.p(\n        { class: 'happinessResult' },\n        num ? Math.round((tot / num) * 10) / 10 : ''\n    )\n","import HappinessResult from './components/happiness-result'\n\nconst Vote = (state, vote) =>\n    vote === 0\n        ? state\n        : {\n              ...state,\n              votes: {\n                  num: state.votes.num + 1,\n                  tot: state.votes.tot + vote,\n              },\n          }\n\nconst Init = state => ({ ...state, votes: { num: 0, tot: 0 } })\n\nconst View = state => HappinessResult(state.votes)\n\nexport { Init, Vote, View }\n","import Message from '../components/message'\nimport * as Nav from '../navigation'\nimport StartPage from './start'\nimport * as Votes from '../votes'\n\nexport default Nav.Page(state => [\n    Message(['Votes cleared from memory', Votes.View(state)]),\n    Nav.Button(state, {\n        direction: 'right',\n        page: StartPage,\n        extra: 'Tap here to...',\n        text: 'Start again',\n    }),\n])\n","import Message from '../components/message'\nimport * as Nav from '../navigation'\nimport * as Votes from '../votes'\nimport ResetPage from './reset'\n\nexport default Nav.Page(state => [\n    Message(['Happiness index: ', Votes.View(state)]),\n    Nav.Button(state, {\n        direction: 'left',\n        page: ResetPage,\n        onnavigate: Votes.Init,\n        extra: 'Need to do it again? Tap here to...',\n        text: 'Reset votes',\n    }),\n])\n","import Message from '../components/message'\nimport * as Nav from '../navigation'\nimport VotePage from './vote'\nimport ResultPage from './result'\n\nexport default Nav.Page(state => [\n    Nav.Button(state, {\n        direction: 'left',\n        page: ResultPage,\n        text: 'Check Result',\n        extra: 'Has everyone voted? Tap here to...',\n    }),\n    Message('Thank you! Now, please hand the phone to the next person.'),\n    Nav.Button(state, {\n        direction: 'right',\n        page: VotePage,\n        text: 'Vote',\n        extra: 'Are you the next person? Tap here to...',\n    }),\n])\n","import Immediate from '../fx/immediate'\nimport Message from '../components/message'\nimport * as Nav from '../navigation'\nimport * as Happiness from '../happiness'\nimport * as Votes from '../votes'\nimport PassPage from './pass'\n\nconst CommitAndReset = (state, happiness) => [\n    state,\n    Immediate(Votes.Vote, happiness),\n    Immediate(Happiness.Init),\n]\n\nexport default Nav.Page(state => [\n    Message('How happy are you about your job?'),\n    Happiness.View(state),\n    Nav.Button(state, {\n        direction: 'left',\n        page: PassPage,\n        onnavigate: [CommitAndReset, Happiness.Value(state)],\n        extra: 'Make your selection, then tap here to...',\n        text: 'Cast vote',\n    }),\n])\n","import Message from '../components/message'\nimport * as Nav from '../navigation'\nimport VotePage from './vote'\n\nexport default Nav.Page(state => [\n    Message('Please pass the phone to the first person'),\n    Nav.Button(state, {\n        direction: 'left',\n        page: VotePage,\n        extra: \"When you're ready, tap here to...\",\n        text: 'Vote',\n    }),\n])\n","import Message from '../components/message'\nimport * as Nav from '../navigation'\nimport StartPage from './start'\n\nexport default Nav.Page(state => [\n    Message('Happiness Index Calculator'),\n    Nav.Button(state, {\n        direction: 'left',\n        page: StartPage,\n        text: 'Start',\n        extra: 'Tap here to ...',\n    }),\n])\n","import { app } from 'hyperapp'\nimport logger from './util/logger'\nimport Body from './components/body'\nimport Immediate from './fx/immediate'\nimport InitPage from './pages/init'\nimport * as Nav from './navigation'\nimport * as Happiness from './happiness'\nimport * as Votes from './votes'\n\napp(\n    {\n        init: [\n            {},\n            Immediate(Nav.Init, InitPage),\n            Immediate(Happiness.Init),\n            Immediate(Votes.Init),\n        ],\n        view: state => Body({}, Nav.Container(state)),\n        node: document.body,\n    },\n    logger\n)\n"]}